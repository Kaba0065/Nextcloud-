{"version":3,"file":"files_reminders-init.mjs","sources":["../apps/files_reminders/src/actions/setReminderMenuAction.ts","../apps/files_reminders/src/shared/utils.ts","../apps/files_reminders/src/shared/logger.ts","../apps/files_reminders/src/services/reminderService.ts","../apps/files_reminders/src/actions/setReminderSuggestionActions.ts","../apps/files_reminders/src/components/SetCustomReminderModal.vue","../apps/files_reminders/src/services/customPicker.ts","../apps/files_reminders/src/actions/setReminderCustomAction.ts","../apps/files_reminders/src/init.ts"],"sourcesContent":["/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { FileAction } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\nimport AlarmSvg from '@mdi/svg/svg/alarm.svg?raw'\n\nexport const SET_REMINDER_MENU_ID = 'set-reminder-menu'\n\nexport const action = new FileAction({\n\tid: SET_REMINDER_MENU_ID,\n\tdisplayName: () => t('files', 'Set reminder'),\n\ticonSvgInline: () => AlarmSvg,\n\n\tenabled: () => true,\n\n\tasync exec() {\n\t\treturn null\n\t},\n\n\torder: 20,\n})\n","/**\n * @copyright 2023 Christopher Ng <chrng8@gmail.com>\n *\n * @author Christopher Ng <chrng8@gmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport moment from '@nextcloud/moment'\nimport { getCanonicalLocale } from '@nextcloud/l10n'\n\nexport enum DateTimePreset {\n\tLaterToday = 'later-today',\n\tTomorrow = 'tomorrow',\n\tThisWeekend = 'this-weekend',\n\tNextWeek = 'next-week',\n}\n\nexport const getDateTime = (dateTime: DateTimePreset): null | Date => {\n\tconst matchPreset: Record<DateTimePreset, () => null | Date> = {\n\t\t[DateTimePreset.LaterToday]: () => {\n\t\t\tconst now = moment()\n\t\t\tconst evening = moment()\n\t\t\t\t.startOf('day')\n\t\t\t\t.add(18, 'hour')\n\t\t\tconst cutoff = evening\n\t\t\t\t.clone()\n\t\t\t\t.subtract(1, 'hour')\n\t\t\tif (now.isSameOrAfter(cutoff)) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\treturn evening.toDate()\n\t\t},\n\n\t\t[DateTimePreset.Tomorrow]: () => {\n\t\t\tconst day = moment()\n\t\t\t\t.add(1, 'day')\n\t\t\t\t.startOf('day')\n\t\t\t\t.add(8, 'hour')\n\t\t\treturn day.toDate()\n\t\t},\n\n\t\t[DateTimePreset.ThisWeekend]: () => {\n\t\t\tconst today = moment()\n\t\t\tif (\n\t\t\t\t[\n\t\t\t\t\t5, // Friday\n\t\t\t\t\t6, // Saturday\n\t\t\t\t\t7, // Sunday\n\t\t\t\t].includes(today.isoWeekday())\n\t\t\t) {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tconst saturday = moment()\n\t\t\t\t.startOf('isoWeek')\n\t\t\t\t.add(5, 'day')\n\t\t\t\t.add(8, 'hour')\n\t\t\treturn saturday.toDate()\n\t\t},\n\n\t\t[DateTimePreset.NextWeek]: () => {\n\t\t\tconst today = moment()\n\t\t\tif (today.isoWeekday() === 7) { // Sunday\n\t\t\t\treturn null\n\t\t\t}\n\t\t\tconst workday = moment()\n\t\t\t\t.startOf('isoWeek')\n\t\t\t\t.add(1, 'week')\n\t\t\t\t.add(8, 'hour')\n\t\t\treturn workday.toDate()\n\t\t},\n\t}\n\n\treturn matchPreset[dateTime]()\n}\n\nexport const getInitialCustomDueDate = (): Date => {\n\tconst hour = moment().get('hour')\n\tconst dueDate = moment()\n\t\t.startOf('day')\n\t\t.add(hour + 2, 'hour')\n\treturn dueDate.toDate()\n}\n\nexport const getDateString = (dueDate: Date): string => {\n\tlet formatOptions: Intl.DateTimeFormatOptions = {\n\t\thour: 'numeric',\n\t\tminute: '2-digit',\n\t}\n\n\tconst dueDateMoment = moment(dueDate)\n\tconst today = moment()\n\n\tif (!dueDateMoment.isSame(today, 'date')) {\n\t\tformatOptions = {\n\t\t\t...formatOptions,\n\t\t\tweekday: 'short',\n\t\t}\n\t}\n\n\tif (!dueDateMoment.isSame(today, 'week')) {\n\t\tformatOptions = {\n\t\t\t...formatOptions,\n\t\t\tmonth: 'short',\n\t\t\tday: 'numeric',\n\t\t}\n\t}\n\n\treturn dueDate.toLocaleString(\n\t\tgetCanonicalLocale(),\n\t\tformatOptions,\n\t)\n}\n\nexport const getVerboseDateString = (dueDate: Date): string => {\n\tconst formatOptions: Intl.DateTimeFormatOptions = {\n\t\tweekday: 'long',\n\t\thour: 'numeric',\n\t\tminute: '2-digit',\n\t\tmonth: 'long',\n\t\tday: 'numeric',\n\t}\n\n\treturn dueDate.toLocaleString(\n\t\tgetCanonicalLocale(),\n\t\tformatOptions,\n\t)\n}\n","/**\n * @copyright 2023 Christopher Ng <chrng8@gmail.com>\n *\n * @author Christopher Ng <chrng8@gmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nexport const logger = getLoggerBuilder()\n\t.setApp('files_reminders')\n\t.detectUser()\n\t.build()\n","/**\n * @copyright 2023 Christopher Ng <chrng8@gmail.com>\n *\n * @author Christopher Ng <chrng8@gmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport axios from '@nextcloud/axios'\nimport { generateOcsUrl } from '@nextcloud/router'\n\ninterface Reminder {\n\tdueDate: null | Date\n}\n\nexport const getReminder = async (fileId: number): Promise<Reminder> => {\n\tconst url = generateOcsUrl('/apps/files_reminders/api/v1/{fileId}', { fileId })\n\tconst response = await axios.get(url)\n\tconst dueDate = response.data.ocs.data.dueDate ? new Date(response.data.ocs.data.dueDate) : null\n\n\treturn {\n\t\tdueDate,\n\t}\n}\n\nexport const setReminder = async (fileId: number, dueDate: Date): Promise<[]> => {\n\tconst url = generateOcsUrl('/apps/files_reminders/api/v1/{fileId}', { fileId })\n\n\tconst response = await axios.put(url, {\n\t\tdueDate: dueDate.toISOString(), // timezone of string is always UTC\n\t})\n\n\treturn response.data.ocs.data\n}\n\nexport const clearReminder = async (fileId: number): Promise<[]> => {\n\tconst url = generateOcsUrl('/apps/files_reminders/api/v1/{fileId}', { fileId })\n\tconst response = await axios.delete(url)\n\n\treturn response.data.ocs.data\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport type { Node } from '@nextcloud/files'\n\nimport { FileAction } from '@nextcloud/files'\nimport { showError, showSuccess } from '@nextcloud/dialogs'\nimport { translate as t } from '@nextcloud/l10n'\n\nimport { DateTimePreset, getDateString, getDateTime, getVerboseDateString } from '../shared/utils'\nimport { logger } from '../shared/logger'\nimport { SET_REMINDER_MENU_ID } from './setReminderMenuAction'\nimport { setReminder } from '../services/reminderService'\nimport './setReminderSuggestionActions.scss'\n\ninterface ReminderOption {\n\tdateTimePreset: DateTimePreset\n\tlabel: string\n\tariaLabel: string\n\tdateString?: string\n\tverboseDateString?: string\n\taction?: () => Promise<void>\n}\n\nconst laterToday: ReminderOption = {\n\tdateTimePreset: DateTimePreset.LaterToday,\n\tlabel: t('files_reminders', 'Later today'),\n\tariaLabel: t('files_reminders', 'Set reminder for later today'),\n\tdateString: '',\n\tverboseDateString: ''\n}\n\nconst tomorrow: ReminderOption = {\n\tdateTimePreset: DateTimePreset.Tomorrow,\n\tlabel: t('files_reminders', 'Tomorrow'),\n\tariaLabel: t('files_reminders', 'Set reminder for tomorrow'),\n\tdateString: '',\n\tverboseDateString: ''\n}\n\nconst thisWeekend: ReminderOption = {\n\tdateTimePreset: DateTimePreset.ThisWeekend,\n\tlabel: t('files_reminders', 'This weekend'),\n\tariaLabel: t('files_reminders', 'Set reminder for this weekend'),\n\tdateString: '',\n\tverboseDateString: ''\n}\n\nconst nextWeek: ReminderOption = {\n\tdateTimePreset: DateTimePreset.NextWeek,\n\tlabel: t('files_reminders', 'Next week'),\n\tariaLabel: t('files_reminders', 'Set reminder for next week'),\n\tdateString: '',\n\tverboseDateString: ''\n}\n\n/**\n * Generate a file action for the given option\n *\n * @param option The option to generate the action for\n * @return The file action or null if the option should not be shown\n */\nconst generateFileAction = (option: ReminderOption): FileAction|null => {\n\n\treturn new FileAction({\n\t\tid: `set-reminder-${option.dateTimePreset}`,\n\t\tdisplayName: () => `${option.label} – ${option.dateString}`,\n\t\ttitle: () => `${option.ariaLabel} – ${option.verboseDateString}`,\n\n\t\t// Empty svg to hide the icon\n\t\ticonSvgInline: () => '<svg></svg>',\n\n\t\tenabled: () => Boolean(getDateTime(option.dateTimePreset)),\n\t\tparent: SET_REMINDER_MENU_ID,\n\n\t\tasync exec(node: Node) {\n\t\t\t// Can't really happen, but just in case™\n\t\t\tif (!node.fileid) {\n\t\t\t\tlogger.error('Failed to set reminder, missing file id')\n\t\t\t\tshowError(t('files_reminders', 'Failed to set reminder'))\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\t// Set the reminder\n\t\t\ttry {\n\t\t\t\tawait setReminder(node.fileid, getDateTime(option.dateTimePreset)!)\n\t\t\t\tshowSuccess(t('files_reminders', 'Reminder set for \"{fileName}\"', { fileName: node.basename }))\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('Failed to set reminder', { error })\n\t\t\t\tshowError(t('files_reminders', 'Failed to set reminder'))\n\t\t\t}\n\t\t\t// Silent success as we display our own notification\n\t\t\treturn null\n\t\t},\n\n\t\torder: 21,\n\t})\n}\n\n[laterToday, tomorrow, thisWeekend, nextWeek].forEach((option) => {\n\t// Generate the initial date string\n\tconst dateTime = getDateTime(option.dateTimePreset)\n\tif (!dateTime) {\n\t\treturn\n\t}\n\toption.dateString = getDateString(dateTime)\n\toption.verboseDateString = getVerboseDateString(dateTime)\n\t+\n\t// Update the date string every 30 minutes\n\tsetInterval(() => {\n\t\tconst dateTime = getDateTime(option.dateTimePreset)\n\t\tif (!dateTime) {\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// update the submenu remind options strings\n\t\toption.dateString = getDateString(dateTime)\n\t\toption.verboseDateString = getVerboseDateString(dateTime)\n\t}, 1000 * 30 * 60)\n})\n\n// Generate the default preset actions\nexport const actions = [laterToday, tomorrow, thisWeekend, nextWeek]\n\t.map(generateFileAction) as FileAction[]\n","<!--\n  - @copyright 2023 Christopher Ng <chrng8@gmail.com>\n  -\n  - @author Christopher Ng <chrng8@gmail.com>\n  -\n  - @license AGPL-3.0-or-later\n  -\n  - This program is free software: you can redistribute it and/or modify\n  - it under the terms of the GNU Affero General Public License as\n  - published by the Free Software Foundation, either version 3 of the\n  - License, or (at your option) any later version.\n  -\n  - This program is distributed in the hope that it will be useful,\n  - but WITHOUT ANY WARRANTY; without even the implied warranty of\n  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n  - GNU Affero General Public License for more details.\n  -\n  - You should have received a copy of the GNU Affero General Public License\n  - along with this program. If not, see <http://www.gnu.org/licenses/>.\n  -\n-->\n\n<template>\n\t<NcModal v-if=\"opened\"\n\t\t:out-transition=\"true\"\n\t\tsize=\"small\"\n\t\t@close=\"onClose\">\n\t\t<form class=\"custom-reminder-modal\" @submit.prevent=\"setCustom\">\n\t\t\t<h2 class=\"custom-reminder-modal__title\">\n\t\t\t\t{{ title }}\n\t\t\t</h2>\n\n\t\t\t<NcDateTimePickerNative id=\"set-custom-reminder\"\n\t\t\t\tv-model=\"customDueDate\"\n\t\t\t\t:label=\"label\"\n\t\t\t\t:min=\"nowDate\"\n\t\t\t\t:required=\"true\"\n\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t@input=\"onInput\" />\n\n\t\t\t<NcNoteCard v-if=\"isValid\" type=\"info\">\n\t\t\t\t{{ t('files_reminders', 'We will remind you of this file') }}\n\t\t\t\t<NcDateTime :timestamp=\"customDueDate\" />\n\t\t\t</NcNoteCard>\n\n\t\t\t<NcNoteCard v-else type=\"error\">\n\t\t\t\t{{ t('files_reminders', 'Please choose a valid date & time') }}\n\t\t\t</NcNoteCard>\n\n\t\t\t<!-- Buttons -->\n\t\t\t<div class=\"custom-reminder-modal__buttons\">\n\t\t\t\t<!-- Cancel pick -->\n\t\t\t\t<NcButton @click=\"onClose\">\n\t\t\t\t\t{{ t('files_reminders', 'Cancel') }}\n\t\t\t\t</NcButton>\n\n\t\t\t\t<!-- Set reminder -->\n\t\t\t\t<NcButton :disabled=\"!isValid\" native-type=\"submit\" type=\"primary\">\n\t\t\t\t\t{{ t('files_reminders', 'Set reminder') }}\n\t\t\t\t</NcButton>\n\t\t\t</div>\n\t\t</form>\n\t</NcModal>\n</template>\n\n<script lang=\"ts\">\nimport type { Node } from '@nextcloud/files'\nimport { showError, showSuccess } from '@nextcloud/dialogs'\nimport { translate as t } from '@nextcloud/l10n'\nimport Vue from 'vue'\n\nimport NcButton from '@nextcloud/vue/dist/Components/NcButton.js'\nimport NcDateTime from '@nextcloud/vue/dist/Components/NcDateTime.js'\nimport NcDateTimePickerNative from '@nextcloud/vue/dist/Components/NcDateTimePickerNative.js'\nimport NcModal from '@nextcloud/vue/dist/Components/NcModal.js'\nimport NcNoteCard from '@nextcloud/vue/dist/Components/NcNoteCard.js'\n\nimport { getDateString, getInitialCustomDueDate } from '../shared/utils.ts'\nimport { logger } from '../shared/logger.ts'\nimport { setReminder } from '../services/reminderService.ts'\n\nexport default Vue.extend({\n\tname: 'SetCustomReminderModal',\n\n\tcomponents: {\n\t\tNcButton,\n\t\tNcDateTime,\n\t\tNcDateTimePickerNative,\n\t\tNcModal,\n\t\tNcNoteCard,\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tnode: undefined as Node | undefined,\n\t\t\topened: false,\n\t\t\tisValid: true,\n\n\t\t\tcustomDueDate: getInitialCustomDueDate() as '' | Date,\n\t\t\tnowDate: new Date(),\n\t\t}\n\t},\n\n\tcomputed: {\n\t\tfileId(): number {\n\t\t\treturn this.node.fileid\n\t\t},\n\n\t\tfileName(): string {\n\t\t\treturn this.node.basename\n\t\t},\n\n\t\ttitle() {\n\t\t\treturn t('files_reminders', 'Set reminder for \"{fileName}\"', { fileName: this.fileName })\n\t\t},\n\n\t\tlabel(): string {\n\t\t\treturn t('files_reminders', 'Set reminder at custom date & time')\n\t\t},\n\n\t\tclearAriaLabel(): string {\n\t\t\treturn t('files_reminders', 'Clear reminder')\n\t\t},\n\t},\n\n\tmethods: {\n\t\tt,\n\t\tgetDateString,\n\n\t\t/**\n\t\t * Open the modal to set a custom reminder\n\t\t * and reset the state.\n\t\t * @param node The node to set a reminder for\n\t\t */\n\t\tasync open(node: Node): Promise<void> {\n\t\t\tthis.node = node\n\t\t\tthis.isValid = true\n\t\t\tthis.opened = true\n\t\t\tthis.customDueDate = getInitialCustomDueDate()\n\t\t\tthis.nowDate = new Date()\n\n\t\t\t// Focus the input and show the picker after the animation\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst input = document.getElementById('set-custom-reminder') as HTMLInputElement\n\t\t\t\tinput.focus()\n\t\t\t\tinput.showPicker()\n\t\t\t}, 300)\n\t\t},\n\n\t\tasync setCustom(): Promise<void> {\n\t\t\t// Handle input cleared or invalid date\n\t\t\tif (!(this.customDueDate instanceof Date) || isNaN(this.customDueDate)) {\n\t\t\t\tshowError(t('files_reminders', 'Please choose a valid date & time'))\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tawait setReminder(this.fileId, this.customDueDate)\n\t\t\t\tshowSuccess(t('files_reminders', 'Reminder set for \"{fileName}\"', { fileName: this.fileName }))\n\t\t\t\tthis.onClose()\n\t\t\t} catch (error) {\n\t\t\t\tlogger.error('Failed to set reminder', { error })\n\t\t\t\tshowError(t('files_reminders', 'Failed to set reminder'))\n\t\t\t}\n\t\t},\n\n\t\tonClose(): void {\n\t\t\tthis.opened = false\n\t\t\tthis.$emit('close')\n\t\t},\n\n\t\tonInput(): void {\n\t\t\tconst input = document.getElementById('set-custom-reminder') as HTMLInputElement\n\t\t\tthis.isValid = input.checkValidity()\n\t\t},\n\t},\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.custom-reminder-modal {\n\tmargin: 30px;\n\n\t&__title {\n\t\tfont-size: 16px;\n\t\tline-height: 2em;\n\t}\n\n\t&__buttons {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tmargin-top: 30px;\n\n\t\tbutton {\n\t\t\tmargin-left: 10px;\n\t\t}\n\t}\n}\n</style>\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport type { Node } from '@nextcloud/files'\nimport Vue from 'vue'\n\nimport SetCustomReminderModal from '../components/SetCustomReminderModal.vue'\n\nconst View = Vue.extend(SetCustomReminderModal)\nconst mount = document.createElement('div')\nmount.id = 'set-custom-reminder-modal'\ndocument.body.appendChild(mount)\n\n// Create a new Vue instance and mount it to our modal container\nconst CustomReminderModal = new View({\n\tname: 'SetCustomReminderModal',\n\tel: mount,\n})\n\nexport const pickCustomDate = async (node: Node): Promise<void> => {\n\tCustomReminderModal.open(node)\n\n\t// Wait for the modal to close\n\treturn new Promise((resolve) => {\n\t\tCustomReminderModal.$on('close', resolve)\n\t})\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { FileAction, Node } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\nimport CalendarClockSvg from '@mdi/svg/svg/calendar-clock.svg?raw'\n\nimport { SET_REMINDER_MENU_ID } from './setReminderMenuAction'\nimport { pickCustomDate } from '../services/customPicker'\n\nexport const action = new FileAction({\n\tid: 'set-reminder-custom',\n\tdisplayName: () => t('files', 'Set custom reminder'),\n\ttitle: () => t('files_reminders', 'Set reminder at custom date & time'),\n\ticonSvgInline: () => CalendarClockSvg,\n\n\tenabled: () => true,\n\tparent: SET_REMINDER_MENU_ID,\n\n\tasync exec(file: Node) {\n\t\tpickCustomDate(file)\n\t\treturn null\n\t},\n\n\t// After presets\n\torder: 22,\n})\n","/**\n * @copyright 2023 Christopher Ng <chrng8@gmail.com>\n *\n * @author Christopher Ng <chrng8@gmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { registerFileAction } from '@nextcloud/files'\nimport { action as menuAction } from './actions/setReminderMenuAction'\nimport { actions as suggestionActions } from './actions/setReminderSuggestionActions'\nimport { action as customAction } from './actions/setReminderCustomAction'\n\nregisterFileAction(menuAction)\nregisterFileAction(customAction)\nsuggestionActions.forEach((action) => registerFileAction(action))\n"],"names":["SET_REMINDER_MENU_ID","action","FileAction","t","AlarmSvg","DateTimePreset","getDateTime","dateTime","now","moment","evening","cutoff","today","getInitialCustomDueDate","hour","getDateString","dueDate","formatOptions","dueDateMoment","getCanonicalLocale","getVerboseDateString","logger","getLoggerBuilder","setReminder","fileId","url","generateOcsUrl","axios","laterToday","tomorrow","thisWeekend","nextWeek","generateFileAction","option","node","showError","showSuccess","error","actions","_sfc_main","Vue","NcButton","NcDateTime","NcDateTimePickerNative","NcModal","NcNoteCard","input","View","SetCustomReminderModal","mount","CustomReminderModal","pickCustomDate","resolve","CalendarClockSvg","file","registerFileAction","menuAction","customAction","suggestionActions"],"mappings":"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"}