{"version":3,"file":"settings-vue-settings-nextcloud-pdf.js?v=6ff5c0b7643825933f62","mappings":";yBAwBA,IAAMA,GAAoE,IClB1E,SAAmBC,EAAKC,EAAKC,GACzB,MAAMC,EAAOC,SAASC,cAAc,kBAAkBL,KAAOC,KAC7D,GAAa,OAATE,EAAe,CACf,QAAiBG,IAAbJ,EACA,OAAOA,EAEX,MAAM,IAAIK,MAAM,gCAAgCN,QAAUD,IAC9D,CACA,IACI,OAAOQ,KAAKC,MAAMC,KAAKP,EAAKQ,OAChC,CACA,MAAOC,GACH,MAAM,IAAIL,MAAM,iCAAiCN,QAAUD,IAC/D,CACJ,CDIea,CAAU,WAAY,iCAErCC,OAAOC,iBAAiB,oBAAoB,WAC3C,IAAMC,EAAOZ,SAASa,eAAe,kCACjCD,GAAQjB,GACXiB,EAAKD,iBAAiB,SAAS,SAASG,GACvCA,EAAMC,iBACNC,IAAIC,OAAOC,KAAK,CACfC,KAAM,iCAER,GAEF","sources":["webpack:///nextcloud/apps/settings/src/main-nextcloud-pdf.js","webpack:///nextcloud/node_modules/@nextcloud/initial-state/dist/index.es.mjs"],"sourcesContent":["/**\n * @copyright Copyright (c) 2020 John Molakvo√¶ <skjnldsv@protonmail.com>\n *\n * @author Jan C. Borchardt <hey@jancborchardt.net>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\nimport { loadState } from '@nextcloud/initial-state'\n\nconst hasPdf = loadState('settings', 'has-reasons-use-nextcloud-pdf') === true\n\nwindow.addEventListener('DOMContentLoaded', function() {\n\tconst link = document.getElementById('open-reasons-use-nextcloud-pdf')\n\tif (link && hasPdf) {\n\t\tlink.addEventListener('click', function(event) {\n\t\t\tevent.preventDefault()\n\t\t\tOCA.Viewer.open({\n\t\t\t\tpath: '/Reasons to use Nextcloud.pdf',\n\t\t\t})\n\t\t})\n\t}\n})\n","/**\n * @param app app ID, e.g. \"mail\"\n * @param key name of the property\n * @param fallback optional parameter to use as default value\n * @throws if the key can't be found\n */\nfunction loadState(app, key, fallback) {\n    const elem = document.querySelector(`#initial-state-${app}-${key}`);\n    if (elem === null) {\n        if (fallback !== undefined) {\n            return fallback;\n        }\n        throw new Error(`Could not find initial state ${key} of ${app}`);\n    }\n    try {\n        return JSON.parse(atob(elem.value));\n    }\n    catch (e) {\n        throw new Error(`Could not parse initial state ${key} of ${app}`);\n    }\n}\n\nexport { loadState };\n//# sourceMappingURL=index.es.mjs.map\n"],"names":["hasPdf","app","key","fallback","elem","document","querySelector","undefined","Error","JSON","parse","atob","value","e","loadState","window","addEventListener","link","getElementById","event","preventDefault","OCA","Viewer","open","path"],"sourceRoot":""}