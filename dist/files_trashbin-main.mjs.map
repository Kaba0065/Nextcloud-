{"version":3,"file":"files_trashbin-main.mjs","sources":["../apps/files_trashbin/src/services/client.ts","../apps/files_trashbin/src/services/trashbin.ts","../apps/files_trashbin/src/actions/restoreAction.ts","../apps/files_trashbin/src/main.ts"],"sourcesContent":["/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { createClient } from 'webdav'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { getCurrentUser, getRequestToken } from '@nextcloud/auth'\n\nexport const rootPath = `/trashbin/${getCurrentUser()?.uid}/trash`\nexport const rootUrl = generateRemoteUrl('dav' + rootPath)\nconst client = createClient(rootUrl, {\n\theaders: {\n\t\trequesttoken: getRequestToken(),\n\t},\n})\nexport default client\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport type { FileStat, ResponseDataDetailed } from 'webdav'\nimport type { ContentsWithRoot } from '@nextcloud/files'\n\nimport { File, Folder, davParsePermissions, getDavNameSpaces, getDavProperties } from '@nextcloud/files'\nimport { generateRemoteUrl, generateUrl } from '@nextcloud/router'\nimport { getCurrentUser } from '@nextcloud/auth'\n\nimport client, { rootPath } from './client'\n\nconst data = `<?xml version=\"1.0\"?>\n<d:propfind ${getDavNameSpaces()}>\n\t<d:prop>\n\t\t<nc:trashbin-filename />\n\t\t<nc:trashbin-deletion-time />\n\t\t<nc:trashbin-original-location />\n\t\t<nc:trashbin-title />\n\t\t${getDavProperties()}\n\t</d:prop>\n</d:propfind>`\n\nconst resultToNode = function(node: FileStat): File | Folder {\n\tconst permissions = davParsePermissions(node.props?.permissions)\n\tconst owner = getCurrentUser()?.uid as string\n\tconst previewUrl = generateUrl('/apps/files_trashbin/preview?fileId={fileid}&x=32&y=32', node.props)\n\n\tconst nodeData = {\n\t\tid: node.props?.fileid as number || 0,\n\t\tsource: generateRemoteUrl('dav' + rootPath + node.filename),\n\t\t// do not show the mtime column\n\t\t// mtime: new Date(node.lastmod),\n\t\tmime: node.mime as string,\n\t\tsize: node.props?.size as number || 0,\n\t\tpermissions,\n\t\towner,\n\t\troot: rootPath,\n\t\tattributes: {\n\t\t\t...node,\n\t\t\t...node.props,\n\t\t\t// Override displayed name on the list\n\t\t\tdisplayName: node.props?.['trashbin-filename'],\n\t\t\tpreviewUrl,\n\t\t},\n\t}\n\n\tdelete nodeData.attributes.props\n\n\treturn node.type === 'file'\n\t\t? new File(nodeData)\n\t\t: new Folder(nodeData)\n}\n\nexport const getContents = async (path = '/'): Promise<ContentsWithRoot> => {\n\t// TODO: use only one request when webdav-client supports it\n\t// @see https://github.com/perry-mitchell/webdav-client/pull/334\n\tconst rootResponse = await client.stat(path, {\n\t\tdetails: true,\n\t\tdata,\n\t}) as ResponseDataDetailed<FileStat>\n\n\tconst contentsResponse = await client.getDirectoryContents(path, {\n\t\tdetails: true,\n\t\tdata,\n\t}) as ResponseDataDetailed<FileStat[]>\n\n\treturn {\n\t\tfolder: resultToNode(rootResponse.data) as Folder,\n\t\tcontents: contentsResponse.data.map(resultToNode),\n\t}\n}\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { emit } from '@nextcloud/event-bus'\nimport { generateRemoteUrl } from '@nextcloud/router'\nimport { getCurrentUser } from '@nextcloud/auth'\nimport { Permission, Node, View, registerFileAction, FileAction } from '@nextcloud/files'\nimport { translate as t } from '@nextcloud/l10n'\nimport axios from '@nextcloud/axios'\nimport History from '@mdi/svg/svg/history.svg?raw'\n\nimport logger from '../../../files/src/logger.js'\nimport { encodePath } from '@nextcloud/paths'\n\nregisterFileAction(new FileAction({\n\tid: 'restore',\n\tdisplayName() {\n\t\treturn t('files_trashbin', 'Restore')\n\t},\n\ticonSvgInline: () => History,\n\n\tenabled(nodes: Node[], view) {\n\t\t// Only available in the trashbin view\n\t\tif (view.id !== 'trashbin') {\n\t\t\treturn false\n\t\t}\n\n\t\t// Only available if all nodes have read permission\n\t\treturn nodes.length > 0 && nodes\n\t\t\t.map(node => node.permissions)\n\t\t\t.every(permission => (permission & Permission.READ) !== 0)\n\t},\n\n\tasync exec(node: Node) {\n\t\ttry {\n\t\t\tconst destination = generateRemoteUrl(encodePath(`dav/trashbin/${getCurrentUser()?.uid}/restore/${node.basename}`))\n\t\t\tawait axios({\n\t\t\t\tmethod: 'MOVE',\n\t\t\t\turl: node.encodedSource,\n\t\t\t\theaders: {\n\t\t\t\t\tdestination,\n\t\t\t\t},\n\t\t\t})\n\n\t\t\t// Let's pretend the file is deleted since\n\t\t\t// we don't know the restored location\n\t\t\temit('files:node:deleted', node)\n\t\t\treturn true\n\t\t} catch (error) {\n\t\t\tlogger.error(error)\n\t\t\treturn false\n\t\t}\n\t},\n\tasync execBatch(nodes: Node[], view: View, dir: string) {\n\t\treturn Promise.all(nodes.map(node => this.exec(node, view, dir)))\n\t},\n\n\torder: 1,\n\tinline: () => true,\n}))\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { translate as t, translate } from '@nextcloud/l10n'\nimport DeleteSvg from '@mdi/svg/svg/delete.svg?raw'\nimport moment from '@nextcloud/moment'\n\nimport { getContents } from './services/trashbin'\n\n// Register restore action\nimport './actions/restoreAction'\nimport { Column, View, getNavigation } from '@nextcloud/files'\n\nconst Navigation = getNavigation()\nNavigation.register(new View({\n\tid: 'trashbin',\n\tname: t('files_trashbin', 'Deleted files'),\n\tcaption: t('files_trashbin', 'List of files that have been deleted.'),\n\n\temptyTitle: t('files_trashbin', 'No deleted files'),\n\temptyCaption: t('files_trashbin', 'Files and folders you have deleted will show up here'),\n\n\ticon: DeleteSvg,\n\torder: 50,\n\tsticky: true,\n\n\tdefaultSortKey: 'deleted',\n\n\tcolumns: [\n\t\tnew Column({\n\t\t\tid: 'deleted',\n\t\t\ttitle: t('files_trashbin', 'Deleted'),\n\t\t\trender(node) {\n\t\t\t\tconst deletionTime = node.attributes?.['trashbin-deletion-time']\n\t\t\t\tconst span = document.createElement('span')\n\t\t\t\tif (deletionTime) {\n\t\t\t\t\tspan.title = moment.unix(deletionTime).format('LLL')\n\t\t\t\t\tspan.textContent = moment.unix(deletionTime).fromNow()\n\t\t\t\t\treturn span\n\t\t\t\t}\n\n\t\t\t\t// Unknown deletion time\n\t\t\t\tspan.textContent = translate('files_trashbin', 'A long time ago')\n\t\t\t\treturn span\n\t\t\t},\n\t\t\tsort(nodeA, nodeB) {\n\t\t\t\tconst deletionTimeA = nodeA.attributes?.['trashbin-deletion-time'] || nodeA?.mtime || 0\n\t\t\t\tconst deletionTimeB = nodeB.attributes?.['trashbin-deletion-time'] || nodeB?.mtime || 0\n\t\t\t\treturn deletionTimeB - deletionTimeA\n\t\t\t},\n\t\t}),\n\t],\n\n\tgetContents,\n}))\n"],"names":["_a","rootPath","getCurrentUser","rootUrl","generateRemoteUrl","client","createClient","getRequestToken","data","getDavNameSpaces","resultToNode","node","_b","_c","_d","_e","permissions","davParsePermissions","owner","previewUrl","generateUrl","nodeData","File","Folder","getContents","path","rootResponse","contentsResponse","registerFileAction","FileAction","t","History","nodes","view","permission","Permission","destination","encodePath","axios","emit","error","logger","dir","Navigation","getNavigation","View","DeleteSvg","Column","deletionTime","span","moment","translate","nodeA","nodeB","deletionTimeA"],"mappings":"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"}