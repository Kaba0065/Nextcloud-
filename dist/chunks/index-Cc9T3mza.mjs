/*! third party licenses: dist/vendor.LICENSE.txt */
import{Q as m}from"./index-SPIKuWzR.mjs";function l(c){if(!((Number.isInteger(c)||c===Number.POSITIVE_INFINITY)&&c>0))throw new TypeError("Expected `concurrency` to be a number from 1 and up");const e=new m;let u=0;const s=()=>{u--,e.size>0&&e.dequeue()()},a=async(n,r,t)=>{u++;const o=(async()=>n(...t))();r(o);try{await o}catch{}s()},d=(n,r,t)=>{e.enqueue(a.bind(void 0,n,r,t)),(async()=>(await Promise.resolve(),u<c&&e.size>0&&e.dequeue()()))()},i=(n,...r)=>new Promise(t=>{d(n,t,r)});return Object.defineProperties(i,{activeCount:{get:()=>u},pendingCount:{get:()=>e.size},clearQueue:{value:()=>{e.clear()}}}),i}export{l as p};
