{"version":3,"file":"index-Cc9T3mza.mjs","sources":["../../node_modules/p-limit/index.js"],"sourcesContent":["import Queue from 'yocto-queue';\n\nexport default function pLimit(concurrency) {\n\tif (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n\n\tconst queue = new Queue();\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.size > 0) {\n\t\t\tqueue.dequeue()();\n\t\t}\n\t};\n\n\tconst run = async (fn, resolve, args) => {\n\t\tactiveCount++;\n\n\t\tconst result = (async () => fn(...args))();\n\n\t\tresolve(result);\n\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\tnext();\n\t};\n\n\tconst enqueue = (fn, resolve, args) => {\n\t\tqueue.enqueue(run.bind(undefined, fn, resolve, args));\n\n\t\t(async () => {\n\t\t\t// This function needs to wait until the next microtask before comparing\n\t\t\t// `activeCount` to `concurrency`, because `activeCount` is updated asynchronously\n\t\t\t// when the run function is dequeued and called. The comparison in the if-statement\n\t\t\t// needs to happen asynchronously as well to get an up-to-date value for `activeCount`.\n\t\t\tawait Promise.resolve();\n\n\t\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\t\tqueue.dequeue()();\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => {\n\t\tenqueue(fn, resolve, args);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount,\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size,\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.clear();\n\t\t\t},\n\t\t},\n\t});\n\n\treturn generator;\n}\n"],"names":["pLimit","concurrency","queue","Queue","activeCount","next","run","fn","resolve","args","result","enqueue","generator"],"mappings":";yCAEe,SAASA,EAAOC,EAAa,CAC3C,GAAI,GAAG,OAAO,UAAUA,CAAW,GAAKA,IAAgB,OAAO,oBAAsBA,EAAc,GAClG,MAAM,IAAI,UAAU,qDAAqD,EAG1E,MAAMC,EAAQ,IAAIC,EAClB,IAAIC,EAAc,EAElB,MAAMC,EAAO,IAAM,CAClBD,IAEIF,EAAM,KAAO,GAChBA,EAAM,QAAO,GAEhB,EAEOI,EAAM,MAAOC,EAAIC,EAASC,IAAS,CACxCL,IAEA,MAAMM,GAAU,SAAYH,EAAG,GAAGE,CAAI,GAAC,EAEvCD,EAAQE,CAAM,EAEd,GAAI,CACH,MAAMA,CACN,MAAO,CAAE,CAEVL,GACF,EAEOM,EAAU,CAACJ,EAAIC,EAASC,IAAS,CACtCP,EAAM,QAAQI,EAAI,KAAK,OAAWC,EAAIC,EAASC,CAAI,CAAC,GAEnD,UAKA,MAAM,QAAQ,UAEVL,EAAcH,GAAeC,EAAM,KAAO,GAC7CA,EAAM,QAAO,OAGjB,EAEOU,EAAY,CAACL,KAAOE,IAAS,IAAI,QAAQD,GAAW,CACzDG,EAAQJ,EAAIC,EAASC,CAAI,CAC3B,CAAE,EAED,OAAA,OAAO,iBAAiBG,EAAW,CAClC,YAAa,CACZ,IAAK,IAAMR,CACX,EACD,aAAc,CACb,IAAK,IAAMF,EAAM,IACjB,EACD,WAAY,CACX,MAAO,IAAM,CACZA,EAAM,MAAK,CACX,CACD,CACH,CAAE,EAEMU,CACR","x_google_ignoreList":[0]}